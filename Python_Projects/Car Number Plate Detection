import cv2
import imutils #library to resize images
from google.colab.patches import cv2_imshow

!pip install pytesseract

import pytesseract #to extract license plate text from detected license

pytesseract.pytesseract.tesseract_cmd = r'Python_Projects'

image = cv2.imread(r'Python_Projects/jeep.jpg')
resized_image = imutils.resize(image)
cv2_imshow(image)
cv2.waitKey(0)

gray_img = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
cv2_imshow(gray_img)
cv2.waitKey(0)

gray_img = cv2.bilateralFilter(gray_img, 11, 17, 17)
cv2_imshow(gray_img)
cv2.waitKey(0)
#creates smoothened image

edged = cv2.Canny(gray_img, 30, 200)
cv2_imshow(edged)
cv2.waitKey(0)
#detect the edges of image

cnts, new = cv2.findContours(edged.copy(), cv2.RETR_LIST, cv2.CHAIN_APPROX_SIMPLE)
img1 = image.copy()
cv2.drawContours(img1, cnts, -1, (0,255,0), 3)
cv2_imshow(img1)
cv2.waitKey(0)
#create rectangle/bounding boxes of each edge image - contour

cnts = sorted(cnts, key = cv2.contourArea, reverse = True)[:30]
screenCnt = None
img2 = image.copy()
cv2.drawContours(img2, cnts, -1, (0, 255, 0), 3)
cv2_imshow(img2)
cv2.waitKey(0)
#we chose top 30 contours

#which nearest 7 contours are close to license plate
i=7
for c in cnts:
  perimeter = cv2.arcLength(c, True)
  approx  = cv2.approxPolyDP(c, 0.018 * perimeter, True)
  if len(approx) == 4:
        screenCnt = approx
        x,y,w,h = cv2.boundingRect(c)
        new_img = image[y:y + h, x:x + w]
        cv2.imwrite('./'+str(i)+'.png',new_img)      
        i+=1
        break

cv2.drawContours(image, [screenCnt], -1, (0, 255, 0), 3)
cv2_imshow(image)
cv2.waitKey(0)
cv2.destroyAllWindows()

